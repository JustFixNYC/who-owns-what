version: 2.0

jobs:
  build:
    working_directory: ~/who-owns-what
    docker:
      - image: circleci/python:3.6-node
        environment:
          DATABASE_URL: postgres://wow:wow@localhost/wow
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_USER: wow
          POSTGRES_DB: wow
          POSTGRES_PASSWORD: wow
    steps:
      - checkout
      - restore_cache:
          key: v1-py-cache-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Activate venv and install requirements
          command: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          name: Save python deps cache
          key: v1-py-cache-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ~/venv
      - run:
          name: Test python code
          command: |
            . ~/venv/bin/activate
            python dbtool.py builddb --use-test-data
            python dbtool.py loadtestdata
            pytest
      - restore_cache:
          name: Restore yarn package cache
          keys:
            - yarn-packages-v2-{{ checksum "client/yarn.lock" }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install all node dependencies
          command: |
            yarn install --frozen-lockfile
            cd client
            yarn install --frozen-lockfile
      - save_cache:
          name: Save yarn package cache
          key: yarn-packages-v2-{{ checksum "client/yarn.lock" }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Build client and run tests
          command: |
            cd client
            yarn lingui compile
            yarn typecheck
            # Note that CI=true in CircleCI, so this will fail if there are
            # any linter warnings.
            yarn build
            yarn test
      - store_artifacts:
          path: test-reports
          destination: test-reports
